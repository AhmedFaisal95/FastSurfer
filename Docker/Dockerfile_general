
ARG BASE_IMAGE=ubuntu:16.04
ARG CUDA=1
ARG PYTHON_VERSION=3.6
ARG SEG_ONLY=0
ARG SURF_ONLY=0

FROM $BASE_IMAGE

# ARG instructions after FROM are necessary to access argument values within this build
ARG BASE_IMAGE
ARG CUDA
ARG PYTHON_VERSION
ARG SEG_ONLY
ARG SURF_ONLY

RUN echo "[INFO] Build Arguments: \n" \
    "\n - BASE_IMAGE: $BASE_IMAGE" \
    "\n - CUDA: $CUDA" \
    "\n - PYTHON_VERSION: $PYTHON_VERSION" \
    "\n - SEG_ONLY: $SEG_ONLY" \
    "\n - SURF_ONLY: $SURF_ONLY" \
    "\n"

ENV LANG=C.UTF-8

# Install custom libraries    ##TODO: custom libraries???
RUN apt-get update && apt-get install -y --no-install-recommends \
         git \
         wget \
         ca-certificates

# Install custom libraries + freesurfer 6.0 (and necessary dependencies)
RUN if [ "$SEG_ONLY" = 0 ]; then \
    apt-get update && apt-get install -y --no-install-recommends \
             build-essential \
             cmake \
             vim \
             ca-certificates \
             bzip2 \
             libx11-6 \
             libjpeg-dev \
             libpng-dev \
             bc \
             tar \
             zip \
             gawk \
             tcsh \
             time \
             libgomp1 \
             libglu1-mesa \
             libglu1-mesa-dev \
             perl-modules && \
             apt-get clean && \
             rm -rf /tmp/* /var/tmp/* ; \
             # rm -rf /tmp/* /var/tmp/* && \
             # wget -qO- https://surfer.nmr.mgh.harvard.edu/pub/dist/freesurfer/6.0.1/freesurfer-Linux-centos6_x86_64-stable-pub-v6.0.1.tar.gz | tar zxv --no-same-owner -C /opt \
            # --exclude='freesurfer/trctrain' \
            # --exclude='freesurfer/subjects/fsaverage_sym' \
            # --exclude='freesurfer/subjects/fsaverage3' \
            # --exclude='freesurfer/subjects/fsaverage4' \
            # --exclude='freesurfer/subjects/fsaverage5' \
            # --exclude='freesurfer/subjects/fsaverage6' \
            # --exclude='freesurfer/subjects/cvs_avg35' \
            # --exclude='freesurfer/subjects/cvs_avg35_inMNI152' \
            # --exclude='freesurfer/subjects/bert' \
            # --exclude='freesurfer/subjects/V1_average' \
            # --exclude='freesurfer/average/mult-comp-cor' \
            # --exclude='freesurfer/lib/cuda' \
            # --exclude='freesurfer/lib/qt' \
            # --exclude='freesurfer/matlab' \
            # --exclude='freesurfer/diffusion' \
            # --exclude='freesurfer/bin/freeview.bin' \
            # --exclude='freesurfer/bin/freeview' \
            # --exclude='freesurfer/bin/mris_decimate_gui.bin' \
            # --exclude='freesurfer/bin/mris_decimate_gui' \
            # --exclude='freesurfer/bin/qdec.bin' \
            # --exclude='freesurfer/bin/qdec' \
            # --exclude='freesurfer/bin/qdec_glmfit' \
            # --exclude='freesurfer/bin/SegmentSubfieldsT1Longitudinal' \
            # --exclude='freesurfer/bin/SegmentSubjectT1T2_autoEstimateAlveusML' \
            # --exclude='freesurfer/bin/SegmentSubjectT1_autoEstimateAlveusML' \
            # --exclude='freesurfer/bin/SegmentSubjectT2_autoEstimateAlveusML' \
            # --exclude='freesurfer/bin/fs_spmreg.glnxa64'; \
    fi

RUN rm -rf /var/lib/apt/lists/*

# Install miniconda and needed python packages (for FastSurferCNN and recon-surf)
RUN wget -qO ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
     chmod +x ~/miniconda.sh && \
     ~/miniconda.sh -b -p /opt/conda && \
     rm ~/miniconda.sh && \
     /opt/conda/bin/conda install -y python=$PYTHON_VERSION numpy scipy scikit-image && \
     /opt/conda/bin/conda install -y -c conda-forge scikit-sparse nibabel=2.5.1 pillow=8.3.2

# Install python packages needed for FastSurferCNN only
RUN if [ "$SURF_ONLY" = 0 ]; then \
        if [ "$CUDA" = 1 ]; then \
            /opt/conda/bin/conda install -y -c pytorch cudatoolkit=10.0 "pytorch=1.2.0=py3.6_cuda10.0.130_cudnn7.6.2_0" torchvision=0.4.0; else \
            echo "[INFO] SURF_ONLY set to false and CUDA to false. Installing CPU torch libs..."; \
            /opt/conda/bin/conda install -y -c pytorch cpuonly "pytorch=1.2.0=py3.6_cpu_0" torchvision=0.4.0=py36_cpu; \
        fi; \
    fi

ENV PYTHONUNBUFFERED=0 PATH=/opt/conda/bin:$PATH
RUN /opt/conda/bin/conda clean -ya

# Add FreeSurfer Environment variables (.license file needed, alternatively export FS_LICENSE=path/to/license)
RUN if [ "$SEG_ONLY" = 0 ]; then \
    export OS=Linux \
        FS_OVERRIDE=0 \
        FIX_VERTEX_AREA= \
        SUBJECTS_DIR=/opt/freesurfer/subjects \
        FSF_OUTPUT_FORMAT=nii.gz \
        MNI_DIR=/opt/freesurfer/mni \
        LOCAL_DIR=/opt/freesurfer/local \
        FREESURFER_HOME=/opt/freesurfer \
        FSFAST_HOME=/opt/freesurfer/fsfast \
        MINC_BIN_DIR=/opt/freesurfer/mni/bin \
        MINC_LIB_DIR=/opt/freesurfer/mni/lib \
        MNI_DATAPATH=/opt/freesurfer/mni/data \
        FMRI_ANALYSIS_DIR=/opt/freesurfer/fsfast \
        PERL5LIB=/opt/freesurfer/mni/lib/perl5/5.8.5 \
        MNI_PERL5LIB=/opt/freesurfer/mni/lib/perl5/5.8.5 \
        PATH=/opt/freesurfer/bin:/opt/freesurfer/fsfast/bin:/opt/freesurfer/tktools:/opt/freesurfer/mni/bin:$PATH; \
    fi

# install pip related dependencies
RUN python$PYTHON_VERSION -m pip install -U git+https://github.com/Deep-MI/LaPy.git#egg=lapy

# Add FastSurfer and recon-surf to docker image
COPY . /fastsurfer/
ENV FASTSURFER_HOME=/fastsurfer
WORKDIR "/fastsurfer"

ENTRYPOINT ["./run_fastsurfer.sh"]
CMD ["--help"]
